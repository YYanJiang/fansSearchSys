{"ast":null,"code":"import _defineProperty from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport styles from './LoginForm.module.css';\nimport { Button } from 'react-bootstrap';\nimport * as actions from '../actions/userActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport cx from 'classnames';\nimport { Redirect } from 'react-router';\nimport { Fragment } from 'react';\nimport LoginBackground from './LoginBackground'; // import globalStyles from './bootstrap.min.module.css';\n// import cx from 'classnames';\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.loginClick = function (event) {\n      event.preventDefault();\n      console.log(\"Login clicked!\");\n\n      _this.setState({\n        username: event.target.username,\n        password: event.target.password\n      }); // console.log(this.state);\n      // console.log(this.props.users);\n\n\n      _this.authUser();\n\n      event.target.reset();\n    };\n\n    _this.authUser = function () {\n      var loggedUser = {\n        username: _this.state.username,\n        password: _this.state.password\n      }; // console.log(\"userName\"+loggedUser.username)\n\n      var users = _this.props.users; // console.log(\"user0Name\"+users[0].username)\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = users[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var user = _step.value;\n\n          if (loggedUser.username === user.username && loggedUser.password === user.password) {\n            _this.setState({\n              isAuthed: true\n            }, _this.props.logIn(), sessionStorage.getItem('currentUser') === JSON.stringify(loggedUser) ? null : sessionStorage.setItem('currentUser', JSON.stringify(loggedUser))); // alert(\"Login successful!\")\n\n\n            return;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      alert(\"Please enter vaid credentials!\");\n      return;\n    };\n\n    _this.handleOnChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value)); // console.log(event.target.value.length)\n\n\n      if (event.target.value.length < 1) {\n        _this.setState({\n          valid: false\n        }, function () {\n          console.log(_this.state.valid);\n        });\n      } else {\n        _this.setState({\n          valid: true\n        }, function () {\n          console.log(_this.state.valid);\n        });\n      }\n    };\n\n    _this.state = {\n      username: '',\n      password: '',\n      valid: true,\n      isAuthed: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //     // console.log(this.props.users)\n  // }\n\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.isAuthed) {\n        return React.createElement(Redirect, {\n          to: \"/search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(LoginBackground, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: styles.inputForm,\n        onSubmit: this.loginClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.valid ? React.createElement(\"input\", {\n        className: cx(styles.Input, styles.gray),\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username or Email\",\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: cx(styles.Input, styles.red),\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username or Email\",\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-user\",\n        style: {\n          marginLeft: '-30px',\n          color: '#a9a9a9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), this.state.valid ? React.createElement(\"input\", {\n        className: cx(styles.Input, styles.gray),\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) : React.createElement(\"input\", {\n        className: cx(styles.Input, styles.red),\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-lock\",\n        style: {\n          marginLeft: '-30px',\n          color: '#a9a9a9'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        className: styles.login,\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Log in\")));\n    }\n  }]);\n\n  return LoginForm;\n}(Component); // const mapStateToProps = (state) => {\n//     // console.log(\"usersss: \"+state.users.users)\n//     // const users = state.users.users;\n//     // console.log(users)\n//     // return users\n//   }\n// const mapDispatchToProps = (dispatch) => {\n//     return {actions: bindActionCreators(actions, dispatch)}\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/LoginForm.js"],"names":["React","Component","styles","Button","actions","connect","bindActionCreators","cx","Redirect","Fragment","LoginBackground","LoginForm","props","loginClick","event","preventDefault","console","log","setState","username","target","password","authUser","reset","loggedUser","state","users","user","isAuthed","logIn","sessionStorage","getItem","JSON","stringify","setItem","alert","handleOnChange","name","value","length","valid","inputForm","Input","gray","red","marginLeft","color","login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './LoginForm.module.css';\nimport { Button } from 'react-bootstrap';\nimport * as actions from '../actions/userActions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport cx from 'classnames';\nimport { Redirect } from 'react-router';\nimport { Fragment } from 'react';\nimport LoginBackground from './LoginBackground';\n// import globalStyles from './bootstrap.min.module.css';\n// import cx from 'classnames';\n\nclass LoginForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n            valid: true,\n            isAuthed: false\n        }\n    }\n\n    // componentDidMount() {\n    //     // console.log(this.props.users)\n    // }\n\n    loginClick = (event) => {\n        event.preventDefault()\n        console.log(\"Login clicked!\");\n        this.setState({\n            username: event.target.username,\n            password: event.target.password\n        })\n        // console.log(this.state);\n        // console.log(this.props.users);\n        this.authUser();\n        event.target.reset();\n    }\n\n    authUser = () => {\n        let loggedUser = {username: this.state.username, password: this.state.password};\n        // console.log(\"userName\"+loggedUser.username)\n        let users = this.props.users;\n        // console.log(\"user0Name\"+users[0].username)\n        for(let user of users) {\n            if(loggedUser.username === user.username && loggedUser.password === user.password) {\n                this.setState({isAuthed: true}, this.props.logIn(),\n                sessionStorage.getItem('currentUser') === JSON.stringify(loggedUser) ? null : sessionStorage.setItem('currentUser', JSON.stringify(loggedUser))\n                );\n                // alert(\"Login successful!\")\n                return\n            }\n        }\n        alert(\"Please enter vaid credentials!\");\n        return\n    }\n\n    handleOnChange = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n        // console.log(event.target.value.length)\n        if(event.target.value.length < 1) {\n            this.setState({valid: false}, () => {console.log(this.state.valid)})\n        } else {\n            this.setState({valid: true}, () => {console.log(this.state.valid)})\n        }\n    }\n\n    render() {\n        if(this.state.isAuthed) {return <Redirect to='/search' />}\n        return (\n            <Fragment>\n                <LoginBackground />\n                <form className={styles.inputForm} onSubmit={this.loginClick}>\n                    { this.state.valid ? <input \n                    className={cx(styles.Input, styles.gray)} type='text' name='username' \n                    placeholder='Username or Email' onChange={this.handleOnChange}></input> :\n                    <input \n                    className={cx(styles.Input, styles.red)} type='text' name='username' \n                    placeholder='Username or Email' onChange={this.handleOnChange}></input> }\n\n                    <i className=\"fas fa-user\" style={{marginLeft: '-30px', color: '#a9a9a9'}}></i>\n                    {/* <i class=\"fas fa-dog\" style={{marginLeft: '-30px', color: '#a9a9a9'}}></i> */}\n                    \n                    <br/>\n                    { this.state.valid ? <input className={cx(styles.Input, styles.gray)} type='password' name='password' \n                    placeholder='Password' onChange={this.handleOnChange}></input> : \n                    <input className={cx(styles.Input, styles.red)} type='password' name='password' \n                    placeholder='Password' onChange={this.handleOnChange}></input> }\n\n                    <i className=\"fas fa-lock\" style={{marginLeft: '-30px', color: '#a9a9a9'}}></i><br></br>\n                    <Button type='submit' className={styles.login} variant=\"primary\">Log in</Button> \n                </form>\n            </Fragment>\n        )\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     // console.log(\"usersss: \"+state.users.users)\n//     // const users = state.users.users;\n//     // console.log(users)\n//     // return users\n//   }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {actions: bindActionCreators(actions, dispatch)}\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}