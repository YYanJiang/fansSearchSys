{"ast":null,"code":"import axios from 'axios'; // import fetch from 'isomorphic-fetch';\n\nexport function loadProducts() {\n  return function (dispatch) {\n    dispatch({\n      type: \"LOADING_PRODUCTS\"\n    }); // return axios.get('http://localhost:3000/api/products')\n\n    return axios.get('products.json').then(function (response) {\n      var products = response.data.products;\n      console.log(products);\n\n      if (!localStorage.getItem('products')) {\n        localStorage.setItem('products', JSON.stringify(products));\n      }\n\n      return dispatch({\n        type: 'LOAD_PRODUCTS',\n        payload: products\n      }, console.log(products));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/actions/productActions.js"],"names":["axios","loadProducts","dispatch","type","get","then","response","products","data","console","log","localStorage","getItem","setItem","JSON","stringify","payload","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAM,UAACC,QAAD,EAAc;AAChBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR,CADgB,CAEhB;;AACA,WAAOH,KAAK,CAACI,GAAN,CAAU,eAAV,EACNC,IADM,CACD,UAAAC,QAAQ,EAAI;AAAC,UAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcD,QAA/B;AACfE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAG,CAACI,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AAClCD,QAAAA,YAAY,CAACE,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAjC;AACH;;AACD,aAAQL,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,eAAP;AAAwBa,QAAAA,OAAO,EAAET;AAAjC,OAAD,EAChBE,OAAO,CAACC,GAAR,CAAYH,QAAZ,CADgB,CAAhB;AAGH,KATM,EAUNU,KAVM,CAUA,UAAAC,KAAK;AAAA,aAAIT,OAAO,CAACC,GAAR,CAAYQ,KAAZ,CAAJ;AAAA,KAVL,CAAP;AAWH,GAdD;AAeH","sourcesContent":["import axios from 'axios';\n// import fetch from 'isomorphic-fetch';\n\nexport function loadProducts() {\n    return(dispatch) => {\n        dispatch({type: \"LOADING_PRODUCTS\"});\n        // return axios.get('http://localhost:3000/api/products')\n        return axios.get('products.json')\n        .then(response => {const products = response.data.products;\n            console.log(products)\n            if(!localStorage.getItem('products')) {\n                localStorage.setItem('products', JSON.stringify(products))\n            }\n            return (dispatch({type: 'LOAD_PRODUCTS', payload: products}, \n            console.log(products)\n            ))\n        })\n        .catch(error => console.log(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}