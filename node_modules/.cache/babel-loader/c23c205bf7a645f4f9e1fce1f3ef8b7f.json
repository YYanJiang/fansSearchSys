{"ast":null,"code":"import _classCallCheck from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/products/ProductListView.js\";\nimport React, { Component } from 'react';\nimport globalStyles from '../bootstrap.min.module.css';\nimport cx from 'classnames';\nimport styles from './ProductListView.module.css';\nimport { Redirect } from 'react-router';\n\nvar ProductListView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductListView, _Component);\n\n  function ProductListView() {\n    _classCallCheck(this, ProductListView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProductListView).apply(this, arguments));\n  }\n\n  _createClass(ProductListView, [{\n    key: \"componentDidMount\",\n    // const data = this.props.products;\n    value: function componentDidMount() {\n      this.props.actions.loadProducts();\n      var data = this.props.products;\n    }\n  }, {\n    key: \"productRedirect\",\n    value: function productRedirect() {\n      console.log(\"redirect..\");\n      return React.createElement(Redirect, {\n        to: \"/products/id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    } // const ProductListView = (props) => {\n    // console.log(\"pdx:  \"+props.product)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: styles.listView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.dataCard,\n        onClick: this.productRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.verified,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Verified 08/21/2016\"), React.createElement(\"div\", {\n        className: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.data.image,\n        alt: \"\",\n        className: styles.fan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.largeDataDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.data.name), React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.data.series), React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.data.code)), React.createElement(\"div\", {\n        className: styles.strip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.data.technical_data.airflow, \" CFM\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.data.technical_data.power, \" W at max speed\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.data.technical_data.noise, \" dBA at max speed\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.data.technical_data.size, \" fan sweep diameter\")), React.createElement(\"div\", {\n        className: styles.pastSpecs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.pastSpecsLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Past specifications:\"), React.createElement(\"div\", {\n        className: styles.pastSpecsLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, data.past))), React.createElement(\"div\", {\n        className: styles.compareAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(globalStyles[\"custom-control\"], globalStyles[\"custom-checkbox\"]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: cx(globalStyles[\"custom-control-input\"], styles.customInput),\n        id: data.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: cx(globalStyles[\"custom-control-label\"], styles.customLabel),\n        htmlFor: data.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Compare\")), React.createElement(\"div\", {\n        className: styles.addButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: cx(globalStyles.btn, globalStyles['btn-secondary'], globalStyles['dropdown-toggle'], styles.Button),\n        type: \"button\",\n        id: \"dropdownMenuButton\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Add to \\xA0\\xA0\"))));\n    }\n  }]);\n\n  return ProductListView;\n}(Component);\n\nexport default ProductListView; // className={cx(globalStyles.col, globalStyles['col-sm-2'], styles.column)}","map":{"version":3,"sources":["/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/products/ProductListView.js"],"names":["React","Component","globalStyles","cx","styles","Redirect","ProductListView","props","actions","loadProducts","data","products","console","log","listView","dataCard","productRedirect","verified","image","fan","largeDataDiv","largeDataLine","name","series","code","strip","listViewData","technical_data","airflow","power","noise","size","pastSpecs","pastSpecsLine","past","compareAdd","customInput","customLabel","addButton","btn","Button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport globalStyles from '../bootstrap.min.module.css';\nimport cx from 'classnames';\nimport styles from './ProductListView.module.css';\nimport { Redirect } from 'react-router';\n\n\n\nclass ProductListView extends Component {\n// const data = this.props.products;\n    componentDidMount() {\n        this.props.actions.loadProducts();\n        const data = this.props.products;\n    }\n\n    productRedirect(){\n        console.log(\"redirect..\");\n        return <Redirect to='/products/id'/>;\n    }\n\n\n// const ProductListView = (props) => {\n    // console.log(\"pdx:  \"+props.product)\n    \nrender(){\n    return(\n        <div className={styles.listView}>\n            <div className={styles.dataCard} onClick = {this.productRedirect}>\n                <div className={styles.verified}>Verified 08/21/2016</div>\n\n                <div className = {styles.image}>\n                    <img src={this.data.image} alt = \"\" className={styles.fan} />\n                </div>\n\n                <div className={styles.largeDataDiv}>\n                    <div className={styles.largeDataLine}>{this.data.name}</div>\n                    <div className={styles.largeDataLine}>{this.data.series}</div>\n                    <div className={styles.largeDataLine}>{this.data.code}</div>\n                </div>\n\n                <div className={styles.strip}>\n                    <div className={styles.listViewData}>{this.data.technical_data.airflow} CFM</div>\n                    <div className={styles.listViewData}>{this.data.technical_data.power} W at max speed</div>\n                    <div className={styles.listViewData}>{this.data.technical_data.noise} dBA at max speed</div>\n                    <div className={styles.listViewData}>{this.data.technical_data.size} fan sweep diameter</div>\n                </div>\n\n                <div className={styles.pastSpecs}>\n                    <div className={styles.pastSpecsLine}>Past specifications:</div>\n                    <div className={styles.pastSpecsLine}>{data.past}</div>\n                </div>\n            </div>\n\n            <div className={styles.compareAdd}>\n                <div className={cx(globalStyles[\"custom-control\"], globalStyles[\"custom-checkbox\"])}>\n                    <input type=\"checkbox\" className={cx(globalStyles[\"custom-control-input\"], styles.customInput)} id={data.code} />\n                    <label className={cx(globalStyles[\"custom-control-label\"], styles.customLabel)} htmlFor={data.code}>Compare</label>\n                </div>\n\n                <div className={styles.addButton}>\n                    <button className={cx(globalStyles.btn, globalStyles['btn-secondary'],\n                        globalStyles['dropdown-toggle'], styles.Button)} type=\"button\" id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Add to &nbsp;&nbsp;\n                    </button>\n                </div>\n            </div>\n\n        </div>\n    )\n    }\n\n}\n\nexport default ProductListView;\n\n// className={cx(globalStyles.col, globalStyles['col-sm-2'], styles.column)}"]},"metadata":{},"sourceType":"module"}