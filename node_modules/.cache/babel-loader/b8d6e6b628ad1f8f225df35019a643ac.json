{"ast":null,"code":"import _classCallCheck from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/products/ProductListView.js\";\nimport React, { Component } from 'react';\nimport globalStyles from '../bootstrap.min.module.css';\nimport cx from 'classnames';\nimport styles from './ProductListView.module.css';\nimport { Redirect } from 'react-router'; // const data = this.props.products;\n\nvar ProductListView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductListView, _Component);\n\n  function ProductListView(props) {\n    var _this;\n\n    _classCallCheck(this, ProductListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductListView).call(this, props));\n\n    _this.productRedirect = function (event) {\n      console.log(\"redirect..\");\n      console.log(event.value); // this.setState({\n      //     [event.target.name]: event.target.value\n      //   });\n      // this.setState({productId: event.target.value, redirect: true}, () => console.log(event.target.value))\n    };\n\n    _this.state = {\n      productId: '',\n      redirect: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //     this.props.actions.loadProducts();\n  //     // const data = this.props.products;\n  // }\n\n\n  _createClass(ProductListView, [{\n    key: \"render\",\n    // const ProductListView = (props) => {\n    // console.log(\"pdx:  \"+props.product)\n    value: function render() {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/products/{productId}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: styles.listView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.dataCard,\n        value: this.props.product.code,\n        onClick: this.productRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.verified,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Verified 08/21/2016\"), React.createElement(\"div\", {\n        className: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.product.image,\n        alt: \"\",\n        className: styles.fan,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.largeDataDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.props.product.name), React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.props.product.series), React.createElement(\"div\", {\n        className: styles.largeDataLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.product.code)), React.createElement(\"div\", {\n        className: styles.strip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.product.technical_data.airflow, \" CFM\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.product.technical_data.power, \" W at max speed\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.product.technical_data.noise, \" dBA at max speed\"), React.createElement(\"div\", {\n        className: styles.listViewData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.product.technical_data.size, \" fan sweep diameter\")), React.createElement(\"div\", {\n        className: styles.pastSpecs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.pastSpecsLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Past specifications:\"), React.createElement(\"div\", {\n        className: styles.pastSpecsLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.props.product.past))), React.createElement(\"div\", {\n        className: styles.compareAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: cx(globalStyles[\"custom-control\"], globalStyles[\"custom-checkbox\"]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        className: cx(globalStyles[\"custom-control-input\"], styles.customInput),\n        id: this.props.product.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: cx(globalStyles[\"custom-control-label\"], styles.customLabel),\n        htmlFor: this.props.product.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Compare\")), React.createElement(\"div\", {\n        className: styles.addButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: cx(globalStyles.btn, globalStyles['btn-secondary'], globalStyles['dropdown-toggle'], styles.Button),\n        type: \"button\",\n        id: \"dropdownMenuButton\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add to \\xA0\\xA0\"))));\n    }\n  }]);\n\n  return ProductListView;\n}(Component);\n\nexport default ProductListView; // className={cx(globalStyles.col, globalStyles['col-sm-2'], styles.column)}","map":{"version":3,"sources":["/Users/yanyanjiang/Documents/itlize/Project2/joole-with-backend-master/src/components/products/ProductListView.js"],"names":["React","Component","globalStyles","cx","styles","Redirect","ProductListView","props","productRedirect","event","console","log","value","state","productId","redirect","listView","dataCard","product","code","verified","image","fan","largeDataDiv","largeDataLine","name","series","strip","listViewData","technical_data","airflow","power","noise","size","pastSpecs","pastSpecsLine","past","compareAdd","customInput","customLabel","addButton","btn","Button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport globalStyles from '../bootstrap.min.module.css';\nimport cx from 'classnames';\nimport styles from './ProductListView.module.css';\nimport { Redirect } from 'react-router';\n\n\n// const data = this.props.products;\n\nclass ProductListView extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            productId: '',\n            redirect: false\n        }\n    }\n\n\n    // componentDidMount() {\n    //     this.props.actions.loadProducts();\n    //     // const data = this.props.products;\n    // }\n\n    productRedirect= (event) => {\n        console.log(\"redirect..\");\n        console.log(event.value);\n        // this.setState({\n        //     [event.target.name]: event.target.value\n        //   });\n        // this.setState({productId: event.target.value, redirect: true}, () => console.log(event.target.value))\n    }\n    \n\n\n// const ProductListView = (props) => {\n    // console.log(\"pdx:  \"+props.product)\n    \nrender(){\n    if(this.state.redirect) {return <Redirect to='/products/{productId}'/>}\n    return(\n        <div className={styles.listView}>\n            <div className={styles.dataCard} value={this.props.product.code} onClick = {this.productRedirect}>\n                <div className={styles.verified}>Verified 08/21/2016</div>\n\n                <div className = {styles.image}>\n                    <img src={this.props.product.image} alt = \"\" className={styles.fan} />\n                </div>\n\n                <div className={styles.largeDataDiv}>\n                    <div className={styles.largeDataLine}>{this.props.product.name}</div>\n                    <div className={styles.largeDataLine}>{this.props.product.series}</div>\n                    <div className={styles.largeDataLine}>{this.props.product.code}</div>\n                </div>\n\n                <div className={styles.strip}>\n                    <div className={styles.listViewData}>{this.props.product.technical_data.airflow} CFM</div>\n                    <div className={styles.listViewData}>{this.props.product.technical_data.power} W at max speed</div>\n                    <div className={styles.listViewData}>{this.props.product.technical_data.noise} dBA at max speed</div>\n                    <div className={styles.listViewData}>{this.props.product.technical_data.size} fan sweep diameter</div>\n                </div>\n\n                <div className={styles.pastSpecs}>\n                    <div className={styles.pastSpecsLine}>Past specifications:</div>\n                    <div className={styles.pastSpecsLine}>{this.props.product.past}</div>\n                </div>\n            </div>\n\n            <div className={styles.compareAdd}>\n                <div className={cx(globalStyles[\"custom-control\"], globalStyles[\"custom-checkbox\"])}>\n                    <input type=\"checkbox\" className={cx(globalStyles[\"custom-control-input\"], styles.customInput)} id={this.props.product.code} />\n                    <label className={cx(globalStyles[\"custom-control-label\"], styles.customLabel)} htmlFor={this.props.product.code}>Compare</label>\n                </div>\n\n                <div className={styles.addButton}>\n                    <button className={cx(globalStyles.btn, globalStyles['btn-secondary'],\n                        globalStyles['dropdown-toggle'], styles.Button)} type=\"button\" id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Add to &nbsp;&nbsp;\n                    </button>\n                </div>\n            </div>\n\n        </div>\n    )\n    }\n\n}\n\nexport default ProductListView;\n\n// className={cx(globalStyles.col, globalStyles['col-sm-2'], styles.column)}"]},"metadata":{},"sourceType":"module"}